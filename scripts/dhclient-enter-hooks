#!/bin/sh

HOST_IF=eth0
MGMT_IF=eth1
RESOLV=/etc/resolv.conf
RESOLV_D=/etc/resolv.conf.dnsmasq
DNSMASQ_MGMT=/etc/dnsmasq.d/os-vpx-mgmt.conf
PUPPET=/etc/puppet/puppet.conf


edit_puppet_conf()
{
    old_master=`cat ${PUPPET} | grep server | awk '{print $3}'`
    new_master=$1.$2
    sed -i -e "s/server = $old_master/server = $new_master/" ${PUPPET}
}


edit_xapi_url()
{
    # Heuristic for choosing http vs https: Oxford and above uses HTTP
    # and 169.254 addresses; Cowley and below uses HTTPS and 192.168 addresses.
    if expr $1 : 169 >/dev/null
    then
        proto=http
    else
        proto=https
    fi
    echo "XAPI_URL=$proto://$1" >/etc/openstack/xapi-url
}

edit_xapi_dns()
{
  local tmp_hosts="/tmp/hosts"
  grep -v xapi /etc/hosts >"$tmp_hosts"
  echo "$1 xapi dom0" >>"$tmp_hosts"
  mv "$tmp_hosts" /etc/hosts
}

# Merge the DNS configuration parameters that we get from each interface.
# dnsmasq is always listening on 127.0.0.1.
# On the master, named is listening on eth1.
# We need to:
#   Put per-interface configuration in resolv.conf.ethX, so that we have it
#       for later;
#   Put all known search entries in /etc/resolv.conf;
#   Set the nameserver in /etc/resolv.conf to be 127.0.0.1 (dnsmasq);
#   Put the DNS entry for the master in /etc/dnsmasq.d/os-vpx-mgmt.conf, so
#       that it gets used in preference;
#   Put all the other nameservers in /etc/resolv.conf.dnsmasq.
# dnsmasq will be reloaded in dhclient-exit-hooks.
make_resolv_conf() {
    if [ -n "$new_domain_name" ]
    then
        echo "# Generated by Geppetto / dhclient-enter-hooks" >$RESOLV.$interface
        echo "search $new_domain_name" >>$RESOLV.$interface
    fi
    if [ -n "$new_domain_name_servers" ]
    then
        for nameserver in $new_domain_name_servers
        do
            echo "nameserver $nameserver" >>$RESOLV.$interface
        done
    fi

    local tmp_resolv="/tmp/resolv.conf.new"
    local tmp_resolv_dnsmasq="/tmp/resolv.conf.dnsmasq.new"
    echo "# Generated by Geppetto / dhclient-enter-hooks" >$tmp_resolv
    echo "# Generated by Geppetto / dhclient-enter-hooks" >$tmp_resolv_dnsmasq

    iface_resolvs=$(ls $RESOLV.eth* 2>/dev/null || true)
    if [ "$iface_resolvs" ]
    then
        (echo -n "search "
         grep -h "^search " $iface_resolvs | sed -e 's/search //g' | \
             xargs echo -n
         echo) >>$tmp_resolv
         echo "nameserver 127.0.0.1" >>$tmp_resolv
    else
        echo "# No $RESOLV.eth* found." >>$tmp_resolv
    fi

    other_resolvs=$(ls $RESOLV.eth* 2>/dev/null | grep -v $RESOLV.$MGMT_IF ||
                    true)
    if [ "$other_resolvs" ]
    then
         grep -h "^nameserver " $other_resolvs >>$tmp_resolv_dnsmasq
    else
        echo "# No $RESOLV.eth* found (excluding $RESOLV.$MGMT_IF)." \
            >>$tmp_resolv_dnsmasq
    fi

    mv $tmp_resolv $RESOLV
    mv $tmp_resolv_dnsmasq $RESOLV_D
}

write_dnsmasq_conf()
{
    local tmp_dnsmasq="/tmp/os-vpx-mgmt.conf.new"
    echo "# Generated by Geppetto / dhclient-enter-hooks" >$tmp_dnsmasq

    for s in $new_domain_name_servers
    do
        for d in $new_domain_name
        do
            echo "server=/$d/$s" >>$tmp_dnsmasq
        done
        echo "server=/$new_os_vpx_reverse_dns_prefix.in-addr.arpa/$s" \
            >>$tmp_dnsmasq
    done
    mv $tmp_dnsmasq $DNSMASQ_MGMT
}

# Update puppet.conf with DHCP option extension
# that contains the puppetmaster's name
if [ -n "$new_puppet_master_name" -a -n "$new_domain_name" ]
then
    edit_puppet_conf $new_puppet_master_name $new_domain_name
fi


if [ -n "$new_os_vpx_reverse_dns_prefix" ]
then
    write_dnsmasq_conf
fi


# Update xapi address depending on gateway information
if [ -n "$new_routers" -a "$interface" = "$HOST_IF" ]
then
    edit_xapi_url $new_routers
    edit_xapi_dns $new_routers
fi

